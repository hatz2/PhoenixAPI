/**
 * Service and messages to interact with the packets that the game sends and receives from the server.
 */
syntax = "proto3";

package phoenix.game;

import "google/protobuf/empty.proto";

// Service that allows you to read and send packets.
service PacketManager {
    // This method notifies the bot that you want to start reading packets so that it can allocate resources for you. An unique identifier is needed for the request so that the bot knows which allocated resources are yours.
    rpc Subscribe(Identifier) returns (google.protobuf.Empty) {}

    // This method let the bot know that you don't want to read packets anymore so that it can free the previously allocated resources.
    rpc Unsubscribe(Identifier) returns (google.protobuf.Empty) {}

    // Returns a stream of the SEND packets that haven't been processed yet by your application.
    rpc GetPendingSendPackets(Identifier) returns (stream Packet) {}

    // Returns a stream of the RECV packets that haven't been processed yet by your application.
    rpc GetPendingRecvPackets(Identifier) returns (stream Packet) {}

    // Sends a packet to the game server.
    rpc Send(Packet) returns (google.protobuf.Empty) {}

    // Fake receive a packet in the game client.
    rpc Recv(Packet) returns (google.protobuf.Empty) {}
}

// Identifier request for some of the packet manager service methods.
message Identifier {
    string id = 1; // This identifier can be any random string, I recommend to use some form of uuid.
}

// Message that represents a packet.
message Packet {
    string data = 1; // The packet string itself.
}


